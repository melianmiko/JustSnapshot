#!/usr/bin/env python3
import sys
import os

if sys.version_info.major < 3:
    raise Exception("Just Snapshot should be run with Python 3")

# Add project root directory (enable symlink and trunk execution)
PROJECT_ROOT_DIRECTORY = os.path.abspath(
    os.path.dirname(os.path.dirname(os.path.realpath(sys.argv[0]))))

python_path = []
if os.path.exists(os.path.join(PROJECT_ROOT_DIRECTORY, 'jsnapshot_core')) and PROJECT_ROOT_DIRECTORY not in sys.path:
    python_path.insert(0, PROJECT_ROOT_DIRECTORY)
    sys.path.insert(0, PROJECT_ROOT_DIRECTORY)

if python_path:
    os.putenv('PYTHONPATH', "%s:%s" % (os.getenv('PYTHONPATH', ''), ':'.join(python_path)))  # for subprocesses

import argparse
import jsnapshot_core

parser = argparse.ArgumentParser(prog="jsnapshot-delete", description="Delete one snapshot.")
parser.add_argument("snapshot", type=str, help="Snapshot name")
args = parser.parse_args()
name = args.snapshot

callback = jsnapshot_core.AppCallback()
result = jsnapshot_core.initialize_app(callback)
if not result:
    callback.error("App init failed")
    raise SystemExit(1)

volume = jsnapshot_core.bind_root()
engine = jsnapshot_core.BackupEngine(callback, volume)
snapshots = engine.list_snapshots()

item = None
for a in snapshots:
    if a.name == name:
        item = a

if item is None:
    callback.warn("Snapshot with name " + name + " not found")
    raise SystemExit(1)

if item.is_booted():
    callback.error("Can't delete this snapshot: You're booted inside them. Maybe you recovered some snapshot and \n  "+
                   "trying to delete auto-created backup. Reboot system and try again.")
    raise SystemExit(1)

callback.notice("Deleting snapshot " + item.path)
item.delete()
