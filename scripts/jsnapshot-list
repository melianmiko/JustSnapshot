#!/usr/bin/env python3
import sys
import os

if sys.version_info.major < 3:
    raise Exception("Just Snapshot should be run with Python 3")

# Add project root directory (enable symlink and trunk execution)
PROJECT_ROOT_DIRECTORY = os.path.abspath(
    os.path.dirname(os.path.dirname(os.path.realpath(sys.argv[0]))))

python_path = []
if os.path.exists(os.path.join(PROJECT_ROOT_DIRECTORY, 'jsnapshot_core')) and PROJECT_ROOT_DIRECTORY not in sys.path:
    python_path.insert(0, PROJECT_ROOT_DIRECTORY)
    sys.path.insert(0, PROJECT_ROOT_DIRECTORY)

if python_path:
    os.putenv('PYTHONPATH', "%s:%s" % (os.getenv('PYTHONPATH', ''), ':'.join(python_path)))  # for subprocesses

import argparse
import jsnapshot_core

parser = argparse.ArgumentParser(prog="jsnapshot-list", description="List available snapshots")
parser.parse_known_args()

callback = jsnapshot_core.AppCallback()
result = jsnapshot_core.initialize_app(callback)
if not result:
    callback.error("App init failed")
    raise SystemExit(1)

volume = jsnapshot_core.bind_root()
engine = jsnapshot_core.BackupEngine(callback, volume)
snapshots = engine.list_snapshots()
colors = jsnapshot_core.ConsoleColor

print(colors.BOLD + " " + "Flag".ljust(8) + " " + "Name".ljust(24) + " " + "Extra info" + colors.END)
for snapshot in snapshots:
    flag = ""
    color = ""
    if not snapshot.validate():
        color = colors.FAIL
        flag = "FAIL"
    elif snapshot.is_booted():
        color = colors.CYAN
        flag = "BOOT"
    else:
        flag = "----"

    info = ""
    if "info" in snapshot.metadata:
        info = snapshot.metadata["info"]

    print(color + " " + flag.ljust(8) + " " + snapshot.name.ljust(24) + " " + info + colors.END)
