#!/usr/bin/env python3
import argparse
import jsnapshot_core

from jsnapshot_core.callback import AppCallback, ConsoleColor
from jsnapshot_core.engine import BackupEngine
from jsnapshot_core.initializer import initialize_app

parser = argparse.ArgumentParser(prog="jsnapshot-list", description="List available snapshots")
parser.add_argument("-t", "--tag", type=str, help="Filter with tag")
args, a = parser.parse_known_args()

# Init application
callback = AppCallback()
result = initialize_app(callback)
if not result:
    callback.error("App init failed")
    raise SystemExit(1)

# Get base elements
volume = jsnapshot_core.bind_root()
engine = BackupEngine(callback, volume)
colors = ConsoleColor

# Get snapshots
if args.tag is not None:
    snapshots = engine.list_snapshots_with_tag(args.tag)
else:
    snapshots = engine.list_snapshots()

print(colors.BOLD + " " +
      "Flag".ljust(8) + " " +
      "Name".ljust(24) + " " +
      "Tags".ljust(6) + " " +
      "Extra info" + colors.END)

for snapshot in snapshots:
    flag = ""
    color = ""
    if not snapshot.validate():
        color = colors.FAIL
        flag = "FAIL"
    elif snapshot.is_booted():
        color = colors.CYAN
        flag = "BOOT"
    else:
        flag = "----"

    info = ""
    if "info" in snapshot.metadata:
        info = snapshot.metadata["info"]

    tags = ""
    if "tags" in snapshot.metadata:
        for a in snapshot.metadata["tags"]:
            tags += str(a[0]).upper()

    print(color + " " +
          flag.ljust(8) + " " +
          snapshot.name.ljust(24) + " " +
          tags.ljust(6) + " " +
          info + colors.END)
